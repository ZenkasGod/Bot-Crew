import discord
from discord.ext import commands
import time
import json
import os
from datetime import datetime

DATA_FOLDER = "data_onduty"  # Th∆∞ m·ª•c l∆∞u file d·ªØ li·ªáu

class OnDuty(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.active_duty_users = {}
        self.ensure_data_folder()  # Ki·ªÉm tra v√† t·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a c√≥
        self.load_data()

    def ensure_data_folder(self):
        """ƒê·∫£m b·∫£o th∆∞ m·ª•c l∆∞u d·ªØ li·ªáu t·ªìn t·∫°i"""
        if not os.path.exists(DATA_FOLDER):
            os.makedirs(DATA_FOLDER)

    def get_data_file(self):
        """Tr·∫£ v·ªÅ ƒë∆∞·ªùng d·∫´n file JSON theo th√°ng hi·ªán t·∫°i"""
        current_month = datetime.now().strftime("%Y-%m")
        return os.path.join(DATA_FOLDER, f"onduty_thang_{current_month}.json")

    def load_data(self):
        """Load d·ªØ li·ªáu t·ª´ file JSON theo th√°ng hi·ªán t·∫°i"""
        data_file = self.get_data_file()
        if os.path.exists(data_file):
            with open(data_file, "r", encoding="utf-8") as f:
                self.duty_data = json.load(f)
        else:
            self.duty_data = {}

    def save_data(self):
        """L∆∞u d·ªØ li·ªáu v√†o file JSON theo th√°ng hi·ªán t·∫°i"""
        data_file = self.get_data_file()
        with open(data_file, "w", encoding="utf-8") as f:
            json.dump(self.duty_data, f, indent=4)

    @commands.command()
    async def onduty(self, ctx, vehicle_plate: str = None):
        """L·ªánh v√†o ca tr·ª±c v·ªõi bi·ªÉn s·ªë xe"""
        if vehicle_plate is None:
            await ctx.send(f"üö® **{ctx.author.mention}, b·∫°n ch∆∞a nh·∫≠p bi·ªÉn s·ªë xe!**\nVui l√≤ng nh·∫≠p: `!onduty <Bi·ªÉn s·ªë xe>`")
            return

        start_time = time.time()
        user_id = str(ctx.author.id)
        today_date = datetime.now().strftime("%Y-%m-%d")

        if user_id in self.active_duty_users:
            await ctx.send(f"‚ö† **{ctx.author.mention}, b·∫°n ƒë√£ v√†o ca tr·ª±c r·ªìi!**\nD√πng `!offduty` ƒë·ªÉ k·∫øt th√∫c tr∆∞·ªõc khi v√†o xe kh√°c.")
            return

        self.active_duty_users[user_id] = {"start_time": start_time, "vehicle": vehicle_plate}

        if user_id not in self.duty_data:
            self.duty_data[user_id] = {"today": 0, "month": 0, "last_date": today_date, "vehicles": [vehicle_plate]}
        else:
            # N·∫øu l√† ng√†y m·ªõi, reset danh s√°ch xe c·ªßa ng√†y
            if self.duty_data[user_id]["last_date"] != today_date:
                self.duty_data[user_id]["vehicles"] = []

            self.duty_data[user_id]["last_date"] = today_date

            # N·∫øu xe ch∆∞a c√≥ trong danh s√°ch h√¥m nay, th√™m v√†o
            if vehicle_plate not in self.duty_data[user_id]["vehicles"]:
                self.duty_data[user_id]["vehicles"].append(vehicle_plate)

        self.save_data()

        embed = discord.Embed(
            title="‚úÖ ON DUTY - B·∫Øt ƒê·∫ßu Ca Tr·ª±c",
            description=f"üö® **{ctx.author.mention} ƒë√£ v√†o ca tr·ª±c!**",
            color=discord.Color.green()
        )
        embed.set_thumbnail(url=ctx.author.avatar.url if ctx.author.avatar else None)
        embed.add_field(name="üöë Xe s·ª≠ d·ª•ng", value=f"**üöî Bi·ªÉn S·ªë Xe `{vehicle_plate}` üöî**", inline=False)
        embed.add_field(
            name="üìã Danh s√°ch xe h√¥m nay",
            value=", ".join(f"`{plate}`" for plate in self.duty_data[user_id]["vehicles"]),
            inline=False
        )
        embed.add_field(
            name="‚ö† L∆∞u √Ω:",
            value="Nh·ªõ **offduty** khi tho√°t game v√† c·∫•t xe.\nOnDuty **kh√¥ng AFK**!",
            inline=False
        )
        embed.set_footer(text="‚úÖ C·∫£m ∆°n b·∫°n v√† l√†m vi·ªác vui v·∫ª!")

        await ctx.send(embed=embed)

async def setup(bot):
    await bot.add_cog(OnDuty(bot))
