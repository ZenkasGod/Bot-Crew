import discord
from discord.ext import commands
import time
import json
import os
from datetime import datetime

DATA_FOLDER = "data_onduty"

class OffDuty(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    def get_data_file(self):
        """Tr·∫£ v·ªÅ ƒë∆∞·ªùng d·∫´n file JSON theo th√°ng hi·ªán t·∫°i"""
        if not os.path.exists(DATA_FOLDER):
            os.makedirs(DATA_FOLDER)
        current_month = datetime.now().strftime("%Y-%m")
        return os.path.join(DATA_FOLDER, f"onduty_thang_{current_month}.json")

    @commands.command()
    async def offduty(self, ctx):
        """L·ªánh r·ªùi ca tr·ª±c"""
        cog = self.bot.get_cog("OnDuty")
        if not cog:
            await ctx.send("‚ö† **Kh√¥ng th·ªÉ r·ªùi ca tr·ª±c v√¨ h·ªá th·ªëng g·∫∑p l·ªói.**")
            return

        if str(ctx.author.id) not in cog.active_duty_users:
            await ctx.send(f"‚ö† **{ctx.author.mention}, b·∫°n ch∆∞a v√†o ca tr·ª±c!**\nD√πng `!onduty <Bi·ªÉn s·ªë xe>` tr∆∞·ªõc.")
            return

        # T√≠nh to√°n th·ªùi gian on duty
        start_time = cog.active_duty_users.pop(str(ctx.author.id))["start_time"]
        total_seconds = int(time.time() - start_time)

        user_id = str(ctx.author.id)
        today_date = datetime.now().strftime("%Y-%m-%d")
        data_file = self.get_data_file()

        # Load d·ªØ li·ªáu t·ª´ file JSON
        if os.path.exists(data_file):
            with open(data_file, "r", encoding="utf-8") as f:
                duty_data = json.load(f)
        else:
            duty_data = {}

        # N·∫øu ch∆∞a c√≥ d·ªØ li·ªáu, kh·ªüi t·∫°o
        if user_id not in duty_data:
            duty_data[user_id] = {"today": 0, "month": 0, "last_date": today_date}

        # Reset n·∫øu qua ng√†y m·ªõi
        if duty_data[user_id]["last_date"] != today_date:
            duty_data[user_id]["today"] = 0

        # C·∫≠p nh·∫≠t d·ªØ li·ªáu on duty
        duty_data[user_id]["today"] += total_seconds
        duty_data[user_id]["month"] += total_seconds
        duty_data[user_id]["last_date"] = today_date

        # L∆∞u l·∫°i v√†o file
        with open(data_file, "w", encoding="utf-8") as f:
            json.dump(duty_data, f, indent=4, ensure_ascii=False)

        def format_time(seconds):
            """Chuy·ªÉn ƒë·ªïi th·ªùi gian t·ª´ gi√¢y sang gi·ªù v√† ph√∫t (lu√¥n hi·ªÉn th·ªã ƒë·ªß 2 th√†nh ph·∫ßn)"""
            hours = seconds // 3600
            minutes = (seconds % 3600) // 60
            return f"**{int(hours)} gi·ªù {int(minutes)} ph√∫t**"

        # L·∫•y th·ªùi gian ca hi·ªán t·∫°i, h√¥m nay v√† th√°ng n√†y
        ca_hien_tai = format_time(total_seconds)
        hom_nay = format_time(duty_data[user_id]["today"])
        thang_nay = format_time(duty_data[user_id]["month"])

        # G·ª≠i embed th√¥ng b√°o
        embed = discord.Embed(
            title="üî¥ OFF DUTY - K·∫øt Th√∫c Ca Tr·ª±c",
            description=f"‚ùå **{ctx.author.display_name}** ƒë√£ k·∫øt th√∫c ca tr·ª±c!",
            color=discord.Color.red()
        )
        embed.set_thumbnail(url=ctx.author.avatar.url)
        embed.add_field(name="‚è≥ Th·ªùi gian ca n√†y:", value=ca_hien_tai, inline=False)
        embed.add_field(name="üìÜ H√¥m nay ƒë√£ on duty:", value=hom_nay, inline=False)
        embed.add_field(name="üìÖ Th√°ng n√†y ƒë√£ on duty:", value=thang_nay, inline=False)
        embed.set_footer(text="‚úÖ C·∫£m ∆°n b·∫°n ƒë√£ l√†m vi·ªác! Ch√∫c b·∫°n 1 ng√†y t·ªët l√†nh nh·ªõ gi·ªØ g√¨n s·ª©c kh·ªèe")

        await ctx.send(embed=embed)

async def setup(bot):
    await bot.add_cog(OffDuty(bot))
